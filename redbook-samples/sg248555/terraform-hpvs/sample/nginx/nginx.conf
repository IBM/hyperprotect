error_log /dev/stderr info;

events {}
http {
    access_log /dev/stdout;

    server_tokens off;
    client_max_body_size 64k;

    server {
        # forward to port 443 (https)
        listen 80 default_server;
        return 301 https://$host$request_uri;
    }

    server {
        # reverse proxy with tls termination
        listen 443 ssl;
        ssl_certificate sample.test.crt;
        ssl_certificate_key sample.test.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # set default headers
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://code.jquery.com/, img-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self'; object-src 'none'";
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

        # configure server locations
        location = /se-checksums.txt {
            # se-checksums.txt is only available when the contract does NOT define attestationPublicKey
            proxy_pass http://localhost:14785/se-checksums.txt;
        }
        location = /se-checksums.txt.enc {
            # se-checksums.txt.enc is only available when the contract does define attestationPublicKey
            proxy_pass http://localhost:14785/se-checksums.txt.enc;
        }
        location = /se-signature.bin {
            # attestation signature
            proxy_pass http://localhost:14785/se-signature.bin;
        }
        location ~ .ico {
            # serve static content
            root /www;
        }
        location / {
            # serve dynamic content from backend
            index index.html;
            proxy_pass https://localhost:8443/;
            proxy_ssl_trusted_certificate /etc/nginx/backend.crt;
            proxy_ssl_session_reuse on;
            proxy_ssl_verify off;
        }
    }
}